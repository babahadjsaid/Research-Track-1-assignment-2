AutoGen Definitions dummy;
file = {
  file-id   = 'action_client_8cpp';
  file-name = 'actionClient.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'action_client_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'main';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'argc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'argv';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/actionClient.cpp';
      func-mem-desc-line = '29';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/root/Research-Track-1-assignment-2/src/client_action/src/actionClient.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Creates an interface for the user.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
Action Client: <BR>
 ° /reaching_goal

Description :

This node creates an interface that allows the user to send goals to the '/reaching_goal' action server.
The user can enter a position in the format 'x,y' to navigate the robot to that position.
The user can also enter 'c' to cancel the current goal or 'q' to exit the node.

\author Baba HADJ SAID
\date 24/05/2023
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'custom__service_8cpp';
  file-name = 'custom_service.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'custom__service_8cpp_1a64a709645161935afeb3ccc64bbd2a09';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'MyCallBack';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const actionlib_msgs::GoalStatusArray::ConstPtr &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'msg';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/custom_service.cpp';
      func-mem-desc-line = '55';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Callback function for updating the reached and cancelled counters.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function is called when a message is received on the topic "/reaching_goal/status". 
If the status is 3 (goal reached), it increments the count of reached goals.
If the status is 2 (goal canceled), it increments the count of canceled goals.
It also keeps track of the previous status value (tmp) to detect changes in status and avoid duplicate publishing of messages.

@param msg The received GoalStatusArray message.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'custom__service_8cpp_1a8bab9ec4a027c92a3f9fefc0d04c5330';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'callback';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
std_srvs::Trigger::Request &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'req';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
std_srvs::Trigger::Response &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'res';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/custom_service.cpp';
      func-mem-desc-line = '84';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Callback function for handling Trigger service requests.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function is called when a Trigger service is called. 
It prints information about the number of goals reached and goals canceled.
The function sets the response success field to true, indicating a successful response.

@param req The Trigger service request object.
@param res The Trigger service response object.
@return True to indicate a successful service call.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'custom__service_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'main';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'argc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'argv';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/custom_service.cpp';
      func-mem-desc-line = '93';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'custom__service_8cpp_1a6e27f49150e9a14580fb313cc2777e00';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'status';
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/custom_service.cpp';
      var-mem-desc-line = '38';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
current goal status.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'custom__service_8cpp_1a869dc96b4fa3d9bd19c20088b1fc9cf4';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'tmp';
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/custom_service.cpp';
      var-mem-desc-line = '39';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
holds previous goal status.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'custom__service_8cpp_1a3c5c5f451337dd307b41307aeb56d7d1';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'num_reached_goal';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/custom_service.cpp';
      var-mem-desc-line = '40';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'custom__service_8cpp_1a54a09d459b7be59b1a3e4e69f3c8fa81';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'num_canceled';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/custom_service.cpp';
      var-mem-desc-line = '40';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
reached and cancelled counters.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/root/Research-Track-1-assignment-2/src/client_action/src/custom_service.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Node implementing a custom service.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
Subscribes to: <BR>
  ° /reaching_goal/status


Services : <BR>
° /my_custom_server_topic

Description :

This node provides a service "/my_custom_server_topic" that prints the number of goals reached and canceled when the service is called.
to acheive this it subscribes to the topic '/reaching_goal/status' and increaments the counter according to the data received on that topic.

\author Baba HADJ SAID
\date 24/05/2023
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'duplicate_odom_8cpp';
  file-name = 'duplicateOdom.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'duplicate_odom_8cpp_1a7e93e201f9bb6bf1d9206a0fc220cb5a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'OdomCallback';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const nav_msgs::Odometry::ConstPtr &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'msg';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/duplicateOdom.cpp';
      func-mem-desc-line = '49';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Callback function for handling Odometry messages.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This callback function is called when a new Odometry message is received.
It extracts the position information from the message and assigns it to the 'pose' variable.
@param msg The Odometry message received.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'duplicate_odom_8cpp_1af1bbc35e1eb217301ade8fb705183aa4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'CmdvelCallback';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const geometry_msgs::Twist::ConstPtr &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'msg';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/duplicateOdom.cpp';
      func-mem-desc-line = '61';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Callback function for handling Twist messages.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This callback function is called when a new Twist message is received. 
It extracts the linear and angular velocity information from the message and assigns them to the 'linear_vel' and 'angular_vel' variables respectively
@param msg The Twist message received.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'duplicate_odom_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'main';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'argc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'argv';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/duplicateOdom.cpp';
      func-mem-desc-line = '68';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'duplicate_odom_8cpp_1a821574483c721633447bd84cc5cba552';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
geometry_msgs::Vector3
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'linear_vel';
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/duplicateOdom.cpp';
      var-mem-desc-line = '35';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'duplicate_odom_8cpp_1a70298aa35ea889cc2375699179412bf6';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
geometry_msgs::Vector3
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'angular_vel';
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/duplicateOdom.cpp';
      var-mem-desc-line = '35';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Linear and angular velocity variables.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'duplicate_odom_8cpp_1a5e12204382cc386641b804c0770b3f8d';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
geometry_msgs::Point
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'pose';
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/duplicateOdom.cpp';
      var-mem-desc-line = '36';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Pose variable.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/root/Research-Track-1-assignment-2/src/client_action/src/duplicateOdom.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
duplicate the data of "/odom" topic
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@param [in] PublishFreq Define the frequency of publishing.





Subscribes to: <BR>
  ° /odom
  ° /cmd_vel

Publishes to: <BR>
  ° duplicatedOdom


Description :

This node subscribes to the '/odom' and '/cmd_vel' topics 
and publishes a custom message containing the pose, linear velocity, and angular velocity to the 'duplicatedOdom' topic.
The frequency of publishing is determined by the 'PublishFreq' parameter.

\author Baba HADJ SAID
\date 24/05/2023
_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_r_e_a_d_m_e_8md';
  file-name = 'README.md';
  file-full-name  = '/root/Research-Track-1-assignment-2/src/client_action/src/README.md';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_subscriber_8cpp';
  file-name = 'Subscriber.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_subscriber_8cpp_1a64a709645161935afeb3ccc64bbd2a09';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'MyCallBack';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const actionlib_msgs::GoalStatusArray::ConstPtr &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'msg';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/Subscriber.cpp';
      func-mem-desc-line = '53';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Callback for calculating the stats.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function is called when a GoalStatusArray message is received on the '/reaching_goal/status' topic.
It checks if the status is "Gooal Reached" if so performs calculations of the distance traveled and the average speed, if the status indicates goal completion.
It then prints the calculated results.

@param msg The GoalStatusArray message received.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_subscriber_8cpp_1a711e986fc9f0f1d8e33b60f61be62acc';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'CustomMessageCallback';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const client_action::custommsg::ConstPtr &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'msg';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/Subscriber.cpp';
      func-mem-desc-line = '80';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Callback function for Updating the velocity and pose of the robot.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function is called when a custom message is received on the '/duplicatedOdom' topic.
It copies the received message data into the 'my_msg' variable.

@param msg The custom message received.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_subscriber_8cpp_1a3f2256e5f96592877641f4cad2016698';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'goalCallback';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
const assignment_2_2022::PlanningActionGoal::ConstPtr &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'msg';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/Subscriber.cpp';
      func-mem-desc-line = '92';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Callback function for handling goal messages.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function is called when a goal message is received on the '/reaching_goal/goal' topic.
to set the start time and starting position of the robot, it is needed for the calculations later.

@param msg The goal message received.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_subscriber_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'main';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'argc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'argv';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/Subscriber.cpp';
      func-mem-desc-line = '98';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_subscriber_8cpp_1a99a4e9d7a1f4020ba824c5704395fbef';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
client_action::custommsg
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'my_msg';
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/Subscriber.cpp';
      var-mem-desc-line = '36';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
An object of the custom message type <tt>client_action::custommsg</tt>.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_subscriber_8cpp_1a9ad3e48da0521583bab8a5127a0d4436';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
assignment_2_2022::PlanningGoal
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'goal';
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/Subscriber.cpp';
      var-mem-desc-line = '37';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
An object of the goal message type <tt>assignment_2_2022::PlanningGoal</tt>.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_subscriber_8cpp_1a46dea58f2d527f376090214bd5c3233d';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
std::chrono::time_point< std::chrono::high_resolution_clock >
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'start';
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/Subscriber.cpp';
      var-mem-desc-line = '38';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_subscriber_8cpp_1ace54cb99b52f35f3a98f99e2a75dd5ad';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
std::chrono::time_point< std::chrono::high_resolution_clock >
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'end';
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/Subscriber.cpp';
      var-mem-desc-line = '38';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Time points created using <tt>std::chrono::high_resolution_clock</tt> for measuring time.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_subscriber_8cpp_1a6e27f49150e9a14580fb313cc2777e00';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'status';
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/Subscriber.cpp';
      var-mem-desc-line = '39';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_subscriber_8cpp_1a869dc96b4fa3d9bd19c20088b1fc9cf4';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'tmp';
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/Subscriber.cpp';
      var-mem-desc-line = '39';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Variables for storing the current and previous status.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_subscriber_8cpp_1a1487a094ccb34eb279e5c70a25539637';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
geometry_msgs::Point
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'startingpose';
      var-mem-desc-file = '/root/Research-Track-1-assignment-2/src/client_action/src/Subscriber.cpp';
      var-mem-desc-line = '40';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A variable of type <tt>geometry_msgs::Point</tt> used for storing the starting position.
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/root/Research-Track-1-assignment-2/src/client_action/src/Subscriber.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
Stats on the robot performance.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
Subscribes To: <BR>
 ° /duplicatedOdom
 ° /reaching_goal/goal
 ° /reaching_goal/status

Description :

This node subscribes to The custom message containing the robot's position and velocity. 
It calculates the distance traveled by the robot and the average speed. 
The calculated values are printed to the console.

\author Baba HADJ SAID
\date 24/05/2023
_EnD_oF_dEf_TeXt_;
}; /* file */
